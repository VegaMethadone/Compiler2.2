digraph G {
    node [shape=box];
  "1 | start" [shape=ellipse];
  "1 | start" -> "31 | ASM_funcSignature" [label=" L "];
  "31 | ASM_funcSignature" [shape=ellipse];
  "31 | ASM_funcSignature" -> "144 | ASM_Var" [label=" L "];
  "144 | ASM_Var" [shape=ellipse];
  "144 | ASM_Var" -> "143 | ASM_If" [label=" L "];
  "143 | ASM_If" [shape=ellipse];
  "143 | ASM_If" -> "34 | ASM_Assignment" [label=" L "];
  "34 | ASM_Assignment" [shape=ellipse];
  "34 | ASM_Assignment" -> "29 | ASM_END_If" [label=" L "];
  "29 | ASM_END_If" [shape=ellipse];
  "29 | ASM_END_If" -> "142 | ASM_Var" [label=" L "];
  "142 | ASM_Var" [shape=ellipse];
  "142 | ASM_Var" -> "141 | ASM_Ifelse" [label=" L "];
  "141 | ASM_Ifelse" [shape=ellipse];
  "141 | ASM_Ifelse" -> "25 | ASM_ifelseif" [label=" L "];
  "25 | ASM_ifelseif" [shape=ellipse];
  "25 | ASM_ifelseif" -> "51 | ASM_Assignment" [label=" L "];
  "51 | ASM_Assignment" [shape=ellipse];
  "51 | ASM_Assignment" -> "24 | ASM_END_IfElse" [label=" L "];
  "24 | ASM_END_IfElse" [shape=ellipse];
  "24 | ASM_END_IfElse" -> "140 | ASM_Var" [label=" L "];
  "140 | ASM_Var" [shape=ellipse];
  "140 | ASM_Var" -> "139 | ASM_while" [label=" L "];
  "139 | ASM_while" [shape=ellipse];
  "139 | ASM_while" -> "77 | ASM_Assignment" [label=" L "];
  "77 | ASM_Assignment" [shape=ellipse];
  "77 | ASM_Assignment" -> "22 | ASM_END_While" [label=" L "];
  "22 | ASM_END_While" [shape=ellipse];
  "22 | ASM_END_While" -> "138 | ASM_while" [label=" L "];
  "138 | ASM_while" [shape=ellipse];
  "138 | ASM_while" -> "108 | ASM_Ifelse" [label=" L "];
  "108 | ASM_Ifelse" [shape=ellipse];
  "108 | ASM_Ifelse" -> "18 | ASM_ifelseif" [label=" L "];
  "18 | ASM_ifelseif" [shape=ellipse];
  "18 | ASM_ifelseif" -> "95 | ASM_Assignment" [label=" L "];
  "95 | ASM_Assignment" [shape=ellipse];
  "95 | ASM_Assignment" -> "17 | ASM_END_IfElse" [label=" L "];
  "17 | ASM_END_IfElse" [shape=ellipse];
  "17 | ASM_END_IfElse" -> "15 | ASM_END_While" [label=" L "];
  "15 | ASM_END_While" [shape=ellipse];
  "15 | ASM_END_While" -> "137 | ASM_Var" [label=" L "];
  "137 | ASM_Var" [shape=ellipse];
  "137 | ASM_Var" -> "136 | ASM_Dowhile" [label=" L "];
  "136 | ASM_Dowhile" [shape=ellipse];
  "136 | ASM_Dowhile" -> "129 | ASM_Assignment" [label=" L "];
  "129 | ASM_Assignment" [shape=ellipse];
  "129 | ASM_Assignment" -> "128 | ASM_CALL" [label=" L "];
  "128 | ASM_CALL" [shape=ellipse];
  "128 | ASM_CALL" -> "12 | ASM_END_Dowhile" [label=" L "];
  "12 | ASM_END_Dowhile" [shape=ellipse];
  "12 | ASM_END_Dowhile" -> "11 | end" [label=" L "];
  "11 | end" [shape=ellipse];
  "12 | ASM_END_Dowhile" -> "136 | ASM_Dowhile" [label=" R "];
  "12 | ASM_END_Dowhile" -> "12 | LESS\n\n"[shape=box];
  "12 | LESS\n\n" [shape=box];
  "12 | LESS\n\n" -> "22 | ASM_Value\nIDENTIFIER\nj" [label=" L "];
  "22 | ASM_Value\nIDENTIFIER\nj" [shape=box];
  "12 | LESS\n\n" -> "23 | ASM_Value\nINT\n3" [label=" R "];
  "23 | ASM_Value\nINT\n3" [shape=box];
  "128 | ASM_CALL" -> "14 | ASM_CALL_Func\n\n"[shape=box];
  "14 | ASM_CALL_Func\n\n" [shape=box];
  "14 | ASM_CALL_Func\n\n" -> "15 | ASM_FuncName\n\nf" [label=" L "];
  "15 | ASM_FuncName\n\nf" [shape=box];
  "14 | ASM_CALL_Func\n\n" -> "16 | ASM_Arg\n\nj" [label=" R "];
  "16 | ASM_Arg\n\nj" [shape=box];
  "129 | ASM_Assignment" -> "13 | \n\n"[shape=box];
  "13 | \n\n" [shape=box];
  "13 | \n\n" -> "17 | ASM_Write\n\n" [label=" R "];
  "17 | ASM_Write\n\n" [shape=box];
  "17 | ASM_Write\n\n" -> "18 | ASM_Ident\n\nj" [label=" L "];
  "18 | ASM_Ident\n\nj" [shape=box];
  "17 | ASM_Write\n\n" -> "19 | PLUS\n\n" [label=" R "];
  "19 | PLUS\n\n" [shape=box];
  "19 | PLUS\n\n" -> "20 | ASM_Value\nIDENTIFIER\nj" [label=" L "];
  "20 | ASM_Value\nIDENTIFIER\nj" [shape=box];
  "19 | PLUS\n\n" -> "21 | ASM_Value\nINT\n1" [label=" R "];
  "21 | ASM_Value\nINT\n1" [shape=box];
  "137 | ASM_Var" -> "9 | ASM_INIT\n\n"[shape=box];
  "9 | ASM_INIT\n\n" [shape=box];
  "9 | ASM_INIT\n\n" -> "24 | ASM_Type\n\nint" [label=" L "];
  "24 | ASM_Type\n\nint" [shape=box];
  "9 | ASM_INIT\n\n" -> "25 | ASM_Write\n\n" [label=" R "];
  "25 | ASM_Write\n\n" [shape=box];
  "25 | ASM_Write\n\n" -> "26 | ASM_Ident\n\nj" [label=" L "];
  "26 | ASM_Ident\n\nj" [shape=box];
  "25 | ASM_Write\n\n" -> "27 | ASM_Value\nINT\n0" [label=" R "];
  "27 | ASM_Value\nINT\n0" [shape=box];
  "15 | ASM_END_While" -> "138 | ASM_while" [label=" R "];
  "95 | ASM_Assignment" -> "33 | \n\n"[shape=box];
  "33 | \n\n" [shape=box];
  "33 | \n\n" -> "34 | ASM_Write\n\n" [label=" R "];
  "34 | ASM_Write\n\n" [shape=box];
  "34 | ASM_Write\n\n" -> "35 | ASM_Ident\n\ni" [label=" L "];
  "35 | ASM_Ident\n\ni" [shape=box];
  "34 | ASM_Write\n\n" -> "36 | TIMES\n\n" [label=" R "];
  "36 | TIMES\n\n" [shape=box];
  "36 | TIMES\n\n" -> "37 | ASM_Value\nIDENTIFIER\ni" [label=" L "];
  "37 | ASM_Value\nIDENTIFIER\ni" [shape=box];
  "36 | TIMES\n\n" -> "38 | ASM_Value\nINT\n2" [label=" R "];
  "38 | ASM_Value\nINT\n2" [shape=box];
  "108 | ASM_Ifelse" -> "19 | ASM_ifelseelse" [label=" R "];
  "19 | ASM_ifelseelse" [shape=ellipse];
  "19 | ASM_ifelseelse" -> "103 | ASM_Assignment" [label=" L "];
  "103 | ASM_Assignment" [shape=ellipse];
  "103 | ASM_Assignment" -> "17 | ASM_END_IfElse" [label=" L "];
  "103 | ASM_Assignment" -> "39 | \n\n"[shape=box];
  "39 | \n\n" [shape=box];
  "39 | \n\n" -> "40 | ASM_Write\n\n" [label=" R "];
  "40 | ASM_Write\n\n" [shape=box];
  "40 | ASM_Write\n\n" -> "41 | ASM_Ident\n\ni" [label=" L "];
  "41 | ASM_Ident\n\ni" [shape=box];
  "40 | ASM_Write\n\n" -> "42 | TIMES\n\n" [label=" R "];
  "42 | TIMES\n\n" [shape=box];
  "42 | TIMES\n\n" -> "43 | ASM_Value\nIDENTIFIER\ni" [label=" L "];
  "43 | ASM_Value\nIDENTIFIER\ni" [shape=box];
  "42 | TIMES\n\n" -> "44 | ASM_Value\nINT\n3" [label=" R "];
  "44 | ASM_Value\nINT\n3" [shape=box];
  "108 | ASM_Ifelse" -> "29 | PERCENT\n\n"[shape=box];
  "29 | PERCENT\n\n" [shape=box];
  "29 | PERCENT\n\n" -> "45 | ASM_Value\nIDENTIFIER\ni" [label=" L "];
  "45 | ASM_Value\nIDENTIFIER\ni" [shape=box];
  "138 | ASM_while" -> "8 | LESS\n\n"[shape=box];
  "8 | LESS\n\n" [shape=box];
  "8 | LESS\n\n" -> "46 | ASM_Value\nIDENTIFIER\ni" [label=" L "];
  "46 | ASM_Value\nIDENTIFIER\ni" [shape=box];
  "8 | LESS\n\n" -> "47 | ASM_Value\nINT\n100" [label=" R "];
  "47 | ASM_Value\nINT\n100" [shape=box];
  "22 | ASM_END_While" -> "139 | ASM_while" [label=" R "];
  "77 | ASM_Assignment" -> "49 | \n\n"[shape=box];
  "49 | \n\n" [shape=box];
  "49 | \n\n" -> "50 | ASM_Write\n\n" [label=" R "];
  "50 | ASM_Write\n\n" [shape=box];
  "50 | ASM_Write\n\n" -> "51 | ASM_Ident\n\ni" [label=" L "];
  "51 | ASM_Ident\n\ni" [shape=box];
  "50 | ASM_Write\n\n" -> "52 | PLUS\n\n" [label=" R "];
  "52 | PLUS\n\n" [shape=box];
  "52 | PLUS\n\n" -> "53 | ASM_Value\nIDENTIFIER\ni" [label=" L "];
  "53 | ASM_Value\nIDENTIFIER\ni" [shape=box];
  "52 | PLUS\n\n" -> "54 | ASM_Value\nINT\n1" [label=" R "];
  "54 | ASM_Value\nINT\n1" [shape=box];
  "139 | ASM_while" -> "7 | LESS\n\n"[shape=box];
  "7 | LESS\n\n" [shape=box];
  "7 | LESS\n\n" -> "55 | ASM_Value\nIDENTIFIER\ni" [label=" L "];
  "55 | ASM_Value\nIDENTIFIER\ni" [shape=box];
  "7 | LESS\n\n" -> "56 | ASM_Value\nINT\n10" [label=" R "];
  "56 | ASM_Value\nINT\n10" [shape=box];
  "140 | ASM_Var" -> "6 | ASM_INIT\n\n"[shape=box];
  "6 | ASM_INIT\n\n" [shape=box];
  "6 | ASM_INIT\n\n" -> "57 | ASM_Type\n\nint" [label=" L "];
  "57 | ASM_Type\n\nint" [shape=box];
  "6 | ASM_INIT\n\n" -> "58 | ASM_Write\n\n" [label=" R "];
  "58 | ASM_Write\n\n" [shape=box];
  "58 | ASM_Write\n\n" -> "59 | ASM_Ident\n\ni" [label=" L "];
  "59 | ASM_Ident\n\ni" [shape=box];
  "58 | ASM_Write\n\n" -> "60 | ASM_Value\nINT\n0" [label=" R "];
  "60 | ASM_Value\nINT\n0" [shape=box];
  "51 | ASM_Assignment" -> "64 | \n\n"[shape=box];
  "64 | \n\n" [shape=box];
  "64 | \n\n" -> "65 | ASM_Write\n\n" [label=" R "];
  "65 | ASM_Write\n\n" [shape=box];
  "65 | ASM_Write\n\n" -> "66 | ASM_Ident\n\nb" [label=" L "];
  "66 | ASM_Ident\n\nb" [shape=box];
  "65 | ASM_Write\n\n" -> "67 | ASM_Value\nINT\n30" [label=" R "];
  "67 | ASM_Value\nINT\n30" [shape=box];
  "141 | ASM_Ifelse" -> "26 | ASM_ifelseelse" [label=" R "];
  "26 | ASM_ifelseelse" [shape=ellipse];
  "26 | ASM_ifelseelse" -> "57 | ASM_Assignment" [label=" L "];
  "57 | ASM_Assignment" [shape=ellipse];
  "57 | ASM_Assignment" -> "24 | ASM_END_IfElse" [label=" L "];
  "57 | ASM_Assignment" -> "68 | \n\n"[shape=box];
  "68 | \n\n" [shape=box];
  "68 | \n\n" -> "69 | ASM_Write\n\n" [label=" R "];
  "69 | ASM_Write\n\n" [shape=box];
  "69 | ASM_Write\n\n" -> "70 | ASM_Ident\n\nb" [label=" L "];
  "70 | ASM_Ident\n\nb" [shape=box];
  "69 | ASM_Write\n\n" -> "71 | ASM_Value\nINT\n20" [label=" R "];
  "71 | ASM_Value\nINT\n20" [shape=box];
  "141 | ASM_Ifelse" -> "5 | GREATER\n\n"[shape=box];
  "5 | GREATER\n\n" [shape=box];
  "5 | GREATER\n\n" -> "72 | ASM_Value\nIDENTIFIER\nb" [label=" L "];
  "72 | ASM_Value\nIDENTIFIER\nb" [shape=box];
  "5 | GREATER\n\n" -> "73 | ASM_Value\nINT\n10" [label=" R "];
  "73 | ASM_Value\nINT\n10" [shape=box];
  "142 | ASM_Var" -> "4 | ASM_INIT\n\n"[shape=box];
  "4 | ASM_INIT\n\n" [shape=box];
  "4 | ASM_INIT\n\n" -> "74 | ASM_Type\n\nint" [label=" L "];
  "74 | ASM_Type\n\nint" [shape=box];
  "4 | ASM_INIT\n\n" -> "75 | ASM_Write\n\n" [label=" R "];
  "75 | ASM_Write\n\n" [shape=box];
  "75 | ASM_Write\n\n" -> "76 | ASM_Ident\n\nb" [label=" L "];
  "76 | ASM_Ident\n\nb" [shape=box];
  "75 | ASM_Write\n\n" -> "77 | ASM_Value\nINT\n3" [label=" R "];
  "77 | ASM_Value\nINT\n3" [shape=box];
  "34 | ASM_Assignment" -> "79 | \n\n"[shape=box];
  "79 | \n\n" [shape=box];
  "79 | \n\n" -> "80 | ASM_Write\n\n" [label=" R "];
  "80 | ASM_Write\n\n" [shape=box];
  "80 | ASM_Write\n\n" -> "81 | ASM_Ident\n\na" [label=" L "];
  "81 | ASM_Ident\n\na" [shape=box];
  "80 | ASM_Write\n\n" -> "82 | ASM_Value\nINT\n2" [label=" R "];
  "82 | ASM_Value\nINT\n2" [shape=box];
  "143 | ASM_If" -> "29 | ASM_END_If" [label=" R "];
  "143 | ASM_If" -> "3 | NOT_EQUAL\n\n"[shape=box];
  "3 | NOT_EQUAL\n\n" [shape=box];
  "3 | NOT_EQUAL\n\n" -> "83 | ASM_Value\nIDENTIFIER\na" [label=" L "];
  "83 | ASM_Value\nIDENTIFIER\na" [shape=box];
  "3 | NOT_EQUAL\n\n" -> "84 | ASM_Value\nINT\n2" [label=" R "];
  "84 | ASM_Value\nINT\n2" [shape=box];
  "144 | ASM_Var" -> "2 | ASM_INIT\n\n"[shape=box];
  "2 | ASM_INIT\n\n" [shape=box];
  "2 | ASM_INIT\n\n" -> "85 | ASM_Type\n\nint" [label=" L "];
  "85 | ASM_Type\n\nint" [shape=box];
  "2 | ASM_INIT\n\n" -> "86 | ASM_Write\n\n" [label=" R "];
  "86 | ASM_Write\n\n" [shape=box];
  "86 | ASM_Write\n\n" -> "87 | ASM_Ident\n\na" [label=" L "];
  "87 | ASM_Ident\n\na" [shape=box];
  "86 | ASM_Write\n\n" -> "88 | ASM_Value\nINT\n1" [label=" R "];
  "88 | ASM_Value\nINT\n1" [shape=box];
  "31 | ASM_funcSignature" -> "89 | ASM_Func\n\n"[shape=box];
  "89 | ASM_Func\n\n" [shape=box];
  "89 | ASM_Func\n\n" -> "90 | ASM_FuncDef\n\n" [label=" L "];
  "90 | ASM_FuncDef\n\n" [shape=box];
  "90 | ASM_FuncDef\n\n" -> "91 | ASM_Value\n\nvoid" [label=" L "];
  "91 | ASM_Value\n\nvoid" [shape=box];
  "90 | ASM_FuncDef\n\n" -> "92 | ASM_Ident\n\nmain" [label=" R "];
  "92 | ASM_Ident\n\nmain" [shape=box];
  "32 | start" [shape=ellipse];
  "32 | start" -> "35 | ASM_funcSignature" [label=" L "];
  "35 | ASM_funcSignature" [shape=ellipse];
  "35 | ASM_funcSignature" -> "13 | ASM_Assignment" [label=" L "];
  "13 | ASM_Assignment" [shape=ellipse];
  "13 | ASM_Assignment" -> "34 | end" [label=" L "];
  "34 | end" [shape=ellipse];
  "13 | ASM_Assignment" -> "94 | \n\n"[shape=box];
  "94 | \n\n" [shape=box];
  "94 | \n\n" -> "96 | ASM_Write\n\n" [label=" R "];
  "96 | ASM_Write\n\n" [shape=box];
  "96 | ASM_Write\n\n" -> "97 | ASM_Ident\n\nx" [label=" L "];
  "97 | ASM_Ident\n\nx" [shape=box];
  "96 | ASM_Write\n\n" -> "98 | PLUS\n\n" [label=" R "];
  "98 | PLUS\n\n" [shape=box];
  "98 | PLUS\n\n" -> "99 | ASM_Value\nIDENTIFIER\nx" [label=" L "];
  "99 | ASM_Value\nIDENTIFIER\nx" [shape=box];
  "98 | PLUS\n\n" -> "100 | ASM_Value\nINT\n1" [label=" R "];
  "100 | ASM_Value\nINT\n1" [shape=box];
  "35 | ASM_funcSignature" -> "101 | ASM_Func\n\n"[shape=box];
  "101 | ASM_Func\n\n" [shape=box];
  "101 | ASM_Func\n\n" -> "102 | ASM_FuncDef\n\n" [label=" L "];
  "102 | ASM_FuncDef\n\n" [shape=box];
  "102 | ASM_FuncDef\n\n" -> "103 | ASM_Value\n\nvoid" [label=" L "];
  "103 | ASM_Value\n\nvoid" [shape=box];
  "102 | ASM_FuncDef\n\n" -> "104 | ASM_Ident\n\nf" [label=" R "];
  "104 | ASM_Ident\n\nf" [shape=box];
  "101 | ASM_Func\n\n" -> "105 | ASM_ArgDef\n\n" [label=" R "];
  "105 | ASM_ArgDef\n\n" [shape=box];
  "105 | ASM_ArgDef\n\n" -> "106 | ASM_Value\nTYPEDEF\nint" [label=" L "];
  "106 | ASM_Value\nTYPEDEF\nint" [shape=box];
  "105 | ASM_ArgDef\n\n" -> "107 | ASM_Value\nIDENTIFIER\nx" [label=" R "];
  "107 | ASM_Value\nIDENTIFIER\nx" [shape=box];
}
